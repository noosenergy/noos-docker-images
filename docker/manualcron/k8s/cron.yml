apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: download-rte-ccr
  namespace: noos-cron
spec:
  schedule: "10 12 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "download_rte_ccr.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: sync-mf-nwp-models
  namespace: noos-cron
spec:
  schedule: "20 */3 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["sh", "sync_mf_nwp_models.sh"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: download-mf-synop
  namespace: noos-cron
spec:
  schedule: "22 */3 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "download_mf_synop.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: download-enedis-profiles-prov
  namespace: noos-cron
spec:
  schedule: "40 7 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "download_enedis_profiles_prov.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: download-enedis-profiles-act
  namespace: noos-cron
spec:
  schedule: "35 6 * * TUE"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "download_enedis_profiles_act.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: etl-enedis-profiles
  namespace: noos-cron
spec:
  schedule: "45 7 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "etl_enedis_profiles.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: etl-mf-synop
  namespace: noos-cron
spec:
  schedule: "51 23 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "etl_mf_synop.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: etl-mf-forecasts
  namespace: noos-cron
spec:
  schedule: "58 5,11,17,23 * * *"
  successfulJobsHistoryLimit: 1
  jobTemplate:
    spec:
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: ["python", "etl_mf_forecasts.py"]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
---
apiVersion: batch/v1beta1
kind: CronJob
metadata:
  name: papermill-mint
  namespace: noos-cron
spec:
  schedule: "5 8 * * *"
  successfulJobsHistoryLimit: 1
  concurrencyPolicy: Forbid
  jobTemplate:
    spec:
      backoffLimit: 0
      template:
        spec:
          restartPolicy: Never
          containers:
            - name: script
              image: 254367186279.dkr.ecr.eu-west-1.amazonaws.com/noos-prod/airflow-etl/worker
              imagePullPolicy: Always
              args: [
                  "python",
                  "papermill_upload_coef_volumes_mint.py",
              ]
              envFrom:
                - secretRef:
                    name: manualcron-dotenv
              volumeMounts:
                - name: webserver-templates
                  mountPath: /papermill
                  subPath: noos-notebooks/papermill

          initContainers:
            - name: gitsync
              image: k8s.gcr.io/git-sync:v3.1.6
              imagePullPolicy: IfNotPresent
              args:
                - "--ssh"
                - "--repo=git@github.com:noosenergy/noos-notebooks.git"
                - "--branch=master"
                - "--depth=1"
                - "--root=/tmp/git-sync"
                - "--dest=noos-notebooks"
                - "--one-time"
              securityContext:
                runAsUser: 65533 # git-sync user
              volumeMounts:
                - name: git-secret
                  mountPath: /etc/git-secret
                - name: webserver-templates
                  # Home default for container
                  mountPath: /tmp/git-sync

          volumes:
            - name: git-secret
              secret:
                secretName: git-creds
                defaultMode: 0400
            - name: webserver-templates
              emptyDir: { }

          securityContext:
            fsGroup: 65533 # to make SSH key readable
